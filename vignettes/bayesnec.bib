@article{Fox2010,
author = {Fox, David R},
isbn = {0147-6513},
journal = {Ecotoxicology and environmental safety},
number = {2},
pages = {123--131},
title = {{A Bayesian approach for determining the no effect concentration and hazardous concentration in ecotoxicology}},
volume = {73},
year = {2010}
}
@misc{Fisher2020,
author = {Fisher, Rebecca and Ricardo, Gerard and Fox, David},
doi = {10.5281/ZENODO.3966864},
keywords = {Bayesian modelling,No,concentration,dose,ecotoxicology,effect,response,threshold derivation},
month = {jul},
title = {{Bayesian concentration-response modelling using jagsNEC}},
url = {https://doi.org/10.5281/zenodo.3966864#.XyO0ds7ATtM.mendeley},
year = {2020}
}
@misc{Thorley2018,
author = {Thorley, Joe and Schwarz, Carl},
title = {{ssdtools: Species Sensitivity Distributions. R package version 0.0.3. https://CRAN.R-project.org/package=ssdtools}},
year = {2018}
}
@article{Su2015,
author = {Su, Yu-Sung and Yajima, Masanao},
title = {{R2jags: Using R to Run 'JAGS'. R package version 0.5-6. http://CRAN.R-project.org/package=R2jags}},
year = {2015}
}
@article{Ritz2016,
abstract = {Dose-response analysis can be carried out using multi-purpose commercial statistical software, but except for a few special cases the analysis easily becomes cumbersome as relevant, non-standard output requires manual programming. The extension package drc for the statistical environment R provides a flexible and versatile infrastructure for dose-response analyses in general. The present version of the package, reflecting extensions and modifications over the last decade, provides a user-friendly interface to specify the model assumptions about the dose-response relationship and comes with a number of extractors for summarizing fitted models and carrying out inference on derived parameters. The aim of the present paper is to provide an overview of state-of-the-art dose-response analysis, both in terms of general concepts that have evolved and matured over the years and by means of concrete examples.},
author = {Ritz, Christian and Baty, Florent and Streibig, Jens C and Gerhard, Daniel},
doi = {10.1371/journal.pone.0146021},
journal = {PLoS ONE},
number = {12},
pages = {e0146021},
publisher = {Public Library of Science},
title = {{Dose-Response Analysis Using R}},
url = {http://dx.doi.org/10.1371%2Fjournal.pone.0146021},
volume = {10},
year = {2016}
}
@book{Burnham2002,
address = {New York},
author = {Burnham, K P and Anderson, D R},
edition = {2nd},
pages = {488},
publisher = {Springer},
title = {{Model Selection and Multimodel Inference; A Practical Information-Theoretic Approach}},
year = {2002}
}
@article{Wood2016,
abstract = {The BUGS language offers a very flexible way of specifying complex statistical models for the purposes of Gibbs sampling, while its JAGS variant offers very convenient R integration via the rjags package. However, including smoothers in JAGS models can involve some quite tedious coding, especially for multivariate or adaptive smoothers. Further, if an additive smooth structure is required then some care is needed, in order to centre smooths appropriately, and to find appropriate starting values. R package mgcv implements a wide range of smoothers, all in a manner appropriate for inclusion in JAGS code, and automates centring and other smooth setup tasks. The purpose of this note is to describe an interface between mgcv and JAGS, based around an R function, jagam, which takes a generalized additive model (GAM) as specified in mgcv and automatically generates the JAGS model code and data required for inference about the model via Gibbs sampling. Although the auto-generated JAGS code can be run as is, the expectation is that the user would wish to modify it in order to add complex stochastic model components readily specified in JAGS. A simple interface is also provided for visualisation and further inference about the estimated smooth components using standard mgcv functionality. The methods described here will be un-necessarily inefficient if all that is required is fully Bayesian inference about a standard GAM, rather than the full flexibility of JAGS. In that case the BayesX package would be more efficient.},
author = {Wood, Simon N},
chapter = {1},
doi = {10.18637/jss.v075.i07},
edition = {2016-11-19},
isbn = {1548-7660},
journal = {2016},
keywords = {BUGS,JAGS,R,additive model,generalized additive mixed model,smooth,spline},
number = {7},
pages = {15},
shorttitle = {Just Another Gibbs Additive Modeler: Interfacing J},
title = {{Just Another Gibbs Additive Modeler: Interfacing JAGS and mgcv}},
url = {https://www.jstatsoft.org/v075/i07},
volume = {75},
year = {2016}
}
@article{Burkner2017,
abstract = {The brms package implements Bayesian multilevel models in R using the probabilistic programming language Stan. A wide range of distributions and link functions are supported, allowing users to fit – among others – linear, robust linear, binomial, Poisson, survival, ordinal, zero-inflated, hurdle, and even non-linear models all in a multilevel context. Further modeling options include autocorrelation of the response variable, user defined covariance structures, censored data, as well as meta-analytic standard errors. Prior specifications are flexible and explicitly encourage users to apply prior distributions that actually reflect their beliefs. In addition, model fit can easily be assessed and compared with the Watanabe-Akaike information criterion and leave-one-out cross-validation.},
author = {B{\"{u}}rkner, Paul Christian},
doi = {10.18637/jss.v080.i01},
issn = {15487660},
journal = {Journal of Statistical Software},
keywords = {Bayesian inference,MCMC,Multilevel model,Ordinal data,R,Stan},
title = {{brms: An R package for Bayesian multilevel models using Stan}},
year = {2017}
}
@article{Burkner2018,
abstract = {The brms package allows R users to easily specify a wide range of Bayesian single-level and multilevel models which are fit with the probabilistic programming language Stan behind the scenes. Several response distributions are supported, of which all parameters (e.g., location, scale, and shape) can be predicted. Non-linear relationships may be specified using non-linear predictor terms or semi-parametric approaches such as splines or Gaussian processes. Multivariate models can be fit as well. To make all of these modeling options possible in a multilevel framework, brms provides an intuitive and powerful formula syntax, which extends the well known formula syntax of lme4. The purpose of the present paper is to introduce this syntax in detail and to demonstrate its usefulness with four examples, each showing relevant aspects of the syntax.},
archivePrefix = {arXiv},
arxivId = {1705.11123},
author = {B{\"{u}}rkner, Paul Christian},
doi = {10.32614/rj-2018-017},
eprint = {1705.11123},
issn = {20734859},
journal = {R Journal},
title = {{Advanced Bayesian multilevel modeling with the R package brms}},
year = {2018}
}
@proceedings{dsc2003,
  title        = {Proceedings of the 3\textsuperscript{rd} {International Workshop on Distributed Statistical Computing}},
  shorttitle   = {DSC 2003},
  eventdate    = {2003-03-20/2003-03-22},
  venue        = {Vienna, Austria},
  issn         = {1609-395X},
  date         = {2003},
}
@inproceedings{Plummer2003,
  title = {{JAGS}: A program for analysis of {Bayesian} graphical models using {Gibbs} sampling},
  author = {Martyn Plummer},
  year = {2003},
  crossref = {dsc2003}
}
